name: Start Queue Workers

on:
  workflow_call:
    inputs:
      worker_configs:
        description: |
          JSON string containing list of worker configurations for the matrix.
          Example: '[{"id": 1, "runner": "ubuntu-latest", "cpu-only": true}, {"id": 2, "runner": "windows-latest", "cpu-only": false}]'
        required: true
        type: string
      queue_names:
        description: |
          JSON string containing mapping of runners to queue names.
          Example: '{"ubuntu-latest": "queue1", "windows-latest": "queue2"}'
        required: true
        type: string
      runners:
        description: |
          JSON string containing list of runners.
          Example: '["ubuntu-latest", "windows-latest"]'
        required: true
        type: string
      worker-timeout:
        description: "Max runtime of workers in minutes"
        required: false
        default: "10"
        type: string
      test-timeout:
        description: "Max runtime of tests in minutes"
        required: false
        default: "10"
        type: string
    secrets:
      AZURE_BLOB_STORAGE:
        required: true
      AZURE_QUEUE_STORAGE_ACCOUNT:
        required: true
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

env:
  AZURE_QUEUE_STORAGE_ACCOUNT: ${{ secrets.AZURE_QUEUE_STORAGE_ACCOUNT }}
  AZURE_BLOB_STORAGE: ${{ secrets.AZURE_BLOB_STORAGE }}

jobs:

  start-workers:
    strategy:
      matrix:
        worker: ${{ fromJson(inputs.worker_configs) }}
    runs-on: ${{ matrix.worker.runner }}
    environment: nemo-ci
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Docker Queue Worker
        uses: ./.github/actions/docker-queue-worker
        with:
          worker-id: ${{ matrix.worker.id }}
          queue-name: ${{ fromJson(inputs.queue_names)[matrix.worker.runner] }}
          image: ubuntu
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          azure-queue-storage-account: ${{ secrets.AZURE_QUEUE_STORAGE_ACCOUNT }}
          azure-blob-storage: ${{ secrets.AZURE_BLOB_STORAGE }}
          worker-timeout: ${{ inputs.worker-timeout }}
          cpu-only: ${{ matrix.worker.cpu-only }}

  delete-queues:
    needs: [start-workers]
    if: always()
    runs-on: ubuntu-latest
    environment: nemo-ci
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        runner: ${{ fromJson(inputs.runners) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Delete Queue
        uses: ./.github/actions/delete-azure-queue
        with:
          queue-name: ${{ fromJson(inputs.queue_names)[matrix.runner] }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          azure-queue-storage-account: ${{ secrets.AZURE_QUEUE_STORAGE_ACCOUNT }}
