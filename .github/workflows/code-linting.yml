# Copyright (c) 2025, NVIDIA CORPORATION.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Code linting

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
  workflow_call:

jobs:
  lint-check:
    name: Lint check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Check lint
        run: |
          pip install pre-commit==3.6.0
          pre-commit install
          pre-commit run --all-files --show-diff-on-failure --color=always

  pylint-check:
    name: PyLint check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.10"

      - name: Install dependencies
        run: |
          uv sync --only-group test

      - name: Get changed files
        id: changed-files
        uses: step-security/changed-files@v45.0.1
        with:
          files: |
            **/*.py

      - name: Run PyLint
        id: pylint
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          SKIP_DOCS: ${{ contains(github.event.pull_request.labels.*.name, 'skip-docs') }}
          SKIP_LINTING: ${{ contains(github.event.pull_request.labels.*.name, 'skip-linting') }}
        run: |
          if [[ -z "$CHANGED_FILES" ]]; then
            echo Nothing to lint.
            echo "exit-code=0" | tee -a "$GITHUB_OUTPUT"
            exit 0
          fi

          if [[ $SKIP_DOCS == true ]]; then
            ADDITIONAL_PYLINT_ARGS="--disable=C0115,C0116"
          else
            ADDITIONAL_PYLINT_ARGS=""
          fi

          if [[ $SKIP_LINTING == true ]]; then
            ADDITIONAL_PYLINT_ARGS="--exit-zero"
          fi

          set +e
          uv run --only-group test pylint $ADDITIONAL_PYLINT_ARGS --output "pylintrc.txt" --rcfile ".pylintrc" ${CHANGED_FILES[@]}
          echo "exit-code=$?" | tee -a "$GITHUB_OUTPUT"

      - name: Summary
        if: ${{ steps.pylint.outputs.exit-code != 0 }}
        env:
          SKIP_LINTING: ${{ contains(github.event.pull_request.labels.*.name, 'skip-linting') }}
        run: |
          echo "Pylint output:" | tee -a $GITHUB_STEP_SUMMARY

          echo '```' | tee -a $GITHUB_STEP_SUMMARY
          cat pylintrc.txt | tee -a $GITHUB_STEP_SUMMARY
          echo '```' | tee -a $GITHUB_STEP_SUMMARY

          if [[ "$SKIP_LINTING" != "true" ]]; then
            exit 1
          fi
