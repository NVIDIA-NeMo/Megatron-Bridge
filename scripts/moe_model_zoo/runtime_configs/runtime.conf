#! /bin/bash

# Benchmarking model configurations
declare -A BENCHMARKING_MODEL_CONFIGS=(
    # MODEL:             TP PP EP CP VPP MBS GBS LAYERS DISPATCHER GROUPED_GEMM NNODES RUN_TIME PRETRAIN SLEN    DATASET   [PP_FIRST PP_LAST]
    [Qwen3-235B-A22B]="  2  8  32 1  4   1   256   96    alltoall     true       32    00:20:00    0     4096  Slimpajama" # Account loss and embedding for number of layers
)

# Function to set model configurations based on model name
set_model_configs() {
    local -n model_configs=$1
    local model_name=$2

    # Verify if model_name exists in model_configs
    if [[ -v model_configs[$model_name] ]]; then
        local config=(${model_configs[$model_name]})
    else
        echo "Error: Invalid model $model_name."
        return 1
    fi

    # Parallelism configurations
    export TP=${TP:-${config[0]}}
    export PP=${PP:-${config[1]}}
    export EP=${EP:-${config[2]}}
    export CP=${CP:-${config[3]}}
    export VPP=${VPP:-${config[4]}}

    # Batch size configurations
    export MBS=${MBS:-${config[5]}}
    export GBS=${GBS:-${config[6]}}

    # Model architecture configurations
    export NUM_LAYERS=${NUM_LAYERS:-${config[7]}}

    # MoE configurations
    export MOE_TOKEN_DISPATCHER=${MOE_TOKEN_DISPATCHER:-${config[8]}}
    export MOE_GROUPED_GEMM=${MOE_GROUPED_GEMM:-${config[9]}}

    # Training configurations
    export NNODES=${NNODES:-${config[10]}}
    export RUN_TIME=${RUN_TIME:-${config[11]}}
    export PRETRAIN=${PRETRAIN:-${config[12]}}

    # Data configurations
    export SEQ_LEN=${SEQ_LEN:-${config[13]}}
    export DATASET=${DATASET:-${config[14]}}

    # Virtual pipeline parallelism configurations
    if [[ $VPP -gt 1 ]]; then
        export LAYERS_PER_VP=${LAYERS_PER_VP:-$((NUM_LAYERS / PP / VPP))}
    else
        export LAYERS_PER_VP=false
    fi

    # Uneven pipeline parallelism configurations
    if [[ $((NUM_LAYERS % PP)) -ne 0 ]]; then
        export PP_FIRST=${PP_FIRST:-${config[15]}}
        export PP_LAST=${PP_LAST:-${config[16]}}
    else
        export PP_FIRST=false
        export PP_LAST=false
    fi
}

# Set model configurations based on MODEL
set_model_configs BENCHMARKING_MODEL_CONFIGS ${MODEL}